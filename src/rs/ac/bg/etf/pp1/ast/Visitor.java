// generated with ast extension for cup
// version 0.8
// 20/7/2020 15:22:25


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(RightExpr RightExpr);
    public void visit(Mulop Mulop);
    public void visit(Matched Matched);
    public void visit(Assignop Assignop);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(DeclList DeclList);
    public void visit(AddopLeft AddopLeft);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(DeclItem DeclItem);
    public void visit(AddopRight AddopRight);
    public void visit(ConstDeclarations ConstDeclarations);
    public void visit(ActualParamList ActualParamList);
    public void visit(FormalParamList FormalParamList);
    public void visit(ConstVal ConstVal);
    public void visit(Expr Expr);
    public void visit(Cond Cond);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(ExprItem ExprItem);
    public void visit(ActualPars ActualPars);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(MulopLeft MulopLeft);
    public void visit(ConstDecl ConstDecl);
    public void visit(MethodVarDeclList MethodVarDeclList);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(MulopRight MulopRight);
    public void visit(FormPars FormPars);
    public void visit(PrintExpr PrintExpr);
    public void visit(ModRight ModRight);
    public void visit(DivRight DivRight);
    public void visit(MulRight MulRight);
    public void visit(Mod Mod);
    public void visit(Div Div);
    public void visit(Mul Mul);
    public void visit(MulopR MulopR);
    public void visit(MulopL MulopL);
    public void visit(SubRight SubRight);
    public void visit(AddRight AddRight);
    public void visit(Sub Sub);
    public void visit(Add Add);
    public void visit(EqualR EqualR);
    public void visit(AddopR AddopR);
    public void visit(AddopL AddopL);
    public void visit(AssignMul AssignMul);
    public void visit(AssignAdd AssignAdd);
    public void visit(Assign Assign);
    public void visit(DesignatorExpr DesignatorExpr);
    public void visit(DesignatorNoExpr DesignatorNoExpr);
    public void visit(ActualParam ActualParam);
    public void visit(ActualParams ActualParams);
    public void visit(NoActuals NoActuals);
    public void visit(Actuals Actuals);
    public void visit(FuncCall FuncCall);
    public void visit(NewArrayType NewArrayType);
    public void visit(NewType NewType);
    public void visit(ExprFactor ExprFactor);
    public void visit(Var Var);
    public void visit(Const Const);
    public void visit(FactorExpr FactorExpr);
    public void visit(MulopTerm MulopTerm);
    public void visit(TermExpr TermExpr);
    public void visit(AddExpr AddExpr);
    public void visit(NegativeExpression NegativeExpression);
    public void visit(Expression Expression);
    public void visit(Greater Greater);
    public void visit(AndCond AndCond);
    public void visit(DecAssign DecAssign);
    public void visit(IncAssign IncAssign);
    public void visit(RightSideExpr RightSideExpr);
    public void visit(ErrAssignment ErrAssignment);
    public void visit(Dec Dec);
    public void visit(Inc Inc);
    public void visit(Assignment Assignment);
    public void visit(IfMatchedStmt IfMatchedStmt);
    public void visit(ProcCall ProcCall);
    public void visit(MatchedIf MatchedIf);
    public void visit(ReturnNoExpr ReturnNoExpr);
    public void visit(ReturnExpr ReturnExpr);
    public void visit(Read Read);
    public void visit(PrintExprStatement PrintExprStatement);
    public void visit(PrintStmt PrintStmt);
    public void visit(DesStatement DesStatement);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(UnmachedStmt UnmachedStmt);
    public void visit(MatchedStmt MatchedStmt);
    public void visit(NoStmt NoStmt);
    public void visit(Statements Statements);
    public void visit(ArrayParamDecl ArrayParamDecl);
    public void visit(FormalParDecl FormalParDecl);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(NoFormParam NoFormParam);
    public void visit(FormParams FormParams);
    public void visit(VoidMethod VoidMethod);
    public void visit(MethodName MethodName);
    public void visit(NoMethodVarParams NoMethodVarParams);
    public void visit(MethodVarParams MethodVarParams);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(Type Type);
    public void visit(ErrorVarDecl ErrorVarDecl);
    public void visit(VarDeclSingle VarDeclSingle);
    public void visit(ArrayDecl ArrayDecl);
    public void visit(SingleVarDecl SingleVarDecl);
    public void visit(VarDecls VarDecls);
    public void visit(VarDeclList VarDeclList);
    public void visit(CharConst CharConst);
    public void visit(BoolConst BoolConst);
    public void visit(NumConst NumConst);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(SingleConstDecl SingleConstDecl);
    public void visit(ConstDecls ConstDecls);
    public void visit(ConstDeclarationsList ConstDeclarationsList);
    public void visit(DeclItemDerived2 DeclItemDerived2);
    public void visit(DeclItemDerived1 DeclItemDerived1);
    public void visit(NoDecl NoDecl);
    public void visit(ProgDecl ProgDecl);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
